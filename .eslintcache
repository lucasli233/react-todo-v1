[{"/home/oblivion2333/react-todo-v1/src/components/Todo.js":"1","/home/oblivion2333/react-todo-v1/src/components/TodoForm.js":"2","/home/oblivion2333/react-todo-v1/src/App.tsx":"3","/home/oblivion2333/react-todo-v1/src/components/TodoList.js":"4"},{"size":1063,"mtime":1610428461730,"results":"5","hashOfConfig":"6"},{"size":1399,"mtime":1610424127720,"results":"7","hashOfConfig":"6"},{"size":328,"mtime":1610426349140,"results":"8","hashOfConfig":"6"},{"size":1713,"mtime":1610426583730,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"t1opkz",{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","errorCount":1,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/oblivion2333/react-todo-v1/src/components/Todo.js",["19","20"],"/home/oblivion2333/react-todo-v1/src/components/TodoForm.js",["21"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { formatDiagnostic } from \"typescript\";\n//rfce\n\nfunction TodoForm(props) {\n  const [input, setInput] = useState(props.edit ? props.edit.value : \"\");\n\n  //auto focus on start up or after edit\n  const inputRef = useRef(null);\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input,\n    });\n\n    setInput(\"\");\n  };\n\n  return (\n    <form className=\"todo-form\" onSubmit={handleSubmit}>\n      {props.edit ? (\n        <>\n          <input\n            type=\"text\"\n            placeholder=\"Update task\"\n            value={input}\n            name=\"text\"\n            className=\"todo-input edit\"\n            onChange={handleChange}\n            ref={inputRef}\n          />\n          <button className=\"todo-button edit\">Update</button>\n        </>\n      ) : (\n        <>\n          <input\n            type=\"text\"\n            placeholder=\"Add a todo\"\n            value={input}\n            name=\"text\"\n            className=\"todo-input\"\n            onChange={handleChange}\n            ref={inputRef}\n          />\n          <button className=\"todo-button\">Add todo</button>\n        </>\n      )}\n    </form>\n  );\n}\n\nexport default TodoForm;\n","/home/oblivion2333/react-todo-v1/src/App.tsx",["22","23","24","25"],"/home/oblivion2333/react-todo-v1/src/components/TodoList.js",[],{"ruleId":"26","severity":1,"message":"27","line":1,"column":17,"nodeType":"28","messageId":"29","endLine":1,"endColumn":26},{"ruleId":"26","severity":1,"message":"30","line":3,"column":8,"nodeType":"28","messageId":"29","endLine":3,"endColumn":16},{"ruleId":"26","severity":1,"message":"31","line":2,"column":10,"nodeType":"28","messageId":"29","endLine":2,"endColumn":26},{"ruleId":"32","severity":1,"message":"33","line":4,"column":8,"nodeType":"28","messageId":"29","endLine":4,"endColumn":16},{"ruleId":"32","severity":1,"message":"34","line":8,"column":10,"nodeType":"28","messageId":"29","endLine":8,"endColumn":15},{"ruleId":"32","severity":1,"message":"35","line":8,"column":17,"nodeType":"28","messageId":"29","endLine":8,"endColumn":25},{"ruleId":"36","severity":2,"message":"37","line":10,"column":3,"nodeType":"38","messageId":"39","endLine":10,"endColumn":12},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'TodoList' is defined but never used.","'formatDiagnostic' is defined but never used.","@typescript-eslint/no-unused-vars","'TodoForm' is defined but never used.","'todos' is assigned a value but never used.","'setTodos' is assigned a value but never used.","@typescript-eslint/no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression"]