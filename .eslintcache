[{"/home/oblivion2333/react-todo-v1/src/components/Todo.js":"1","/home/oblivion2333/react-todo-v1/src/components/TodoForm.js":"2","/home/oblivion2333/react-todo-v1/src/components/TodoList.js":"3","/home/oblivion2333/react-todo-v1/src/App.tsx":"4"},{"size":1105,"mtime":1610343545730,"results":"5","hashOfConfig":"6"},{"size":930,"mtime":1610418227120,"results":"7","hashOfConfig":"6"},{"size":1284,"mtime":1610374765320,"results":"8","hashOfConfig":"6"},{"size":258,"mtime":1610339417840,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"t1opkz",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/oblivion2333/react-todo-v1/src/components/Todo.js",["19"],"import React, { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport TodoList from \"./TodoList\";\nimport { RiCloseCircleLine } from \"react-icons/ri\";\nimport { TiEdit } from \"react-icons/ti\";\n\nfunction Todo({ todos, completeTodo, removeTodo, updateTodo }) {\n  const [edit, setEdit] = useState({\n    id: null,\n    value: \"\",\n  });\n\n  const submitUpdate = (value) => {\n    updateTodo(edit.id, value);\n    setEdit({ id: null, value: \"\" });\n  };\n\n  if (edit.id) {\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />;\n  }\n\n  return todos.map((todo, index) => (\n    <div\n      className={todo.isComplete ? \"todo-row complete\" : \"todo-row\"}\n      key={index}\n    >\n      <div key={todo.id} onClick={() => completeTodo(todo.id)}>\n        {todo.text}\n      </div>\n      <div className=\"icons\">\n        <RiCloseCircleLine\n          onClick={() => removeTodo(todo.id)}\n          className=\"delete-icon\"\n        />\n        <TiEdit\n          onClick={() => setEdit({ id: todo.id, value: todo.text })}\n          className=\"edit-icon\"\n        />\n      </div>\n    </div>\n  ));\n}\n\nexport default Todo;\n","/home/oblivion2333/react-todo-v1/src/components/TodoForm.js",["20"],"/home/oblivion2333/react-todo-v1/src/components/TodoList.js",[],"/home/oblivion2333/react-todo-v1/src/App.tsx",["21"],{"ruleId":"22","severity":1,"message":"23","line":3,"column":8,"nodeType":"24","messageId":"25","endLine":3,"endColumn":16},{"ruleId":"22","severity":1,"message":"26","line":2,"column":10,"nodeType":"24","messageId":"25","endLine":2,"endColumn":26},{"ruleId":"27","severity":1,"message":"28","line":4,"column":8,"nodeType":"24","messageId":"25","endLine":4,"endColumn":16},"no-unused-vars","'TodoList' is defined but never used.","Identifier","unusedVar","'formatDiagnostic' is defined but never used.","@typescript-eslint/no-unused-vars","'TodoForm' is defined but never used."]