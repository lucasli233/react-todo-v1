{"version":3,"sources":["../node_modules/typescript/lib sync","components/TodoForm.js","components/Todo.js","components/TodoList.js","App.tsx","index.tsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","TodoForm","props","useState","input","setInput","inputRef","useRef","useEffect","current","focus","className","onSubmit","preventDefault","Math","floor","random","text","type","placeholder","value","name","onChange","target","ref","Todo","todos","completeTodo","removeTodo","updateTodo","edit","setEdit","map","todo","index","isComplete","onClick","TodoList","setTodos","test","newTodos","console","log","updatedTodos","removeArr","filter","todoID","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c8f6af97.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 8;","import React, { useState, useEffect, useRef } from \"react\";\nimport { formatDiagnostic } from \"typescript\";\n//rfce\n\nfunction TodoForm(props) {\n  const [input, setInput] = useState(\"\");\n\n  //auto focus on start up or after edit\n  const inputRef = useRef(null);\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input,\n    });\n\n    setInput(\"\");\n  };\n\n  return (\n    <form className=\"todo-form\" onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"Add a todo\"\n        value={input}\n        name=\"text\"\n        className=\"todo-input\"\n        onChange={handleChange}\n        ref={inputRef}\n      />\n      <button className=\"todo-button\">Add todo</button>\n    </form>\n  );\n}\n\nexport default TodoForm;\n","import React, { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport TodoList from \"./TodoList\";\nimport { RiCloseCircleLine } from \"react-icons/ri\";\nimport { TiEdit } from \"react-icons/ti\";\n\nfunction Todo({ todos, completeTodo, removeTodo, updateTodo }) {\n  const [edit, setEdit] = useState({\n    id: null,\n    value: \"\",\n  });\n\n  const submitUpdate = (value) => {\n    updateTodo(edit.id, value);\n    setEdit({ id: null, value: \"\" });\n  };\n\n  if (edit.id) {\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />;\n  }\n\n  return todos.map((todo, index) => (\n    <div\n      className={todo.isComplete ? \"todo-row complete\" : \"todo-row\"}\n      key={index}\n    >\n      <div key={todo.id} onClick={() => completeTodo(todo.id)}>\n        {todo.text}\n      </div>\n      <div className=\"icons\">\n        <RiCloseCircleLine\n          onClick={() => removeTodo(todo.id)}\n          className=\"delete-icon\"\n        />\n        <TiEdit\n          onClick={() => setEdit({ id: todo.id, value: todo.text })}\n          className=\"edit-icon\"\n        />\n      </div>\n    </div>\n  ));\n}\n\nexport default Todo;\n","import React, { useState } from \"react\";\nimport Todo from \"./Todo\";\nimport TodoForm from \"./TodoForm\";\n\nfunction TodoList() {\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = (todo) => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      // handles unexpected inputs\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n\n    setTodos(newTodos);\n    console.log(todo, ...todos);\n  };\n\n  const updateTodo = (todoID, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      // handles unexpected inputs\n      return;\n    }\n    setTodos((prev) =>\n      prev.map((item) => (item.id === todoID ? newValue : item))\n    );\n  };\n\n  const removeTodo = (id) => {\n    const removeArr = [...todos].filter((todo) => todo.id !== id);\n    setTodos(removeArr);\n  };\n\n  const completeTodo = (id) => {\n    let updatedTodos = todos.map((todo) => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  return (\n    <div>\n      <h1> My Tasks</h1>\n      <TodoForm onSubmit={addTodo} />\n      <Todo\n        todos={todos}\n        completeTodo={completeTodo}\n        removeTodo={removeTodo}\n        updateTodo={updateTodo}\n      />\n    </div>\n  );\n}\n\nexport default TodoList;\n","import React from \"react\";\n\nimport \"./App.css\";\nimport TodoForm from \"./components/TodoForm\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}