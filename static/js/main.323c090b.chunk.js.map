{"version":3,"sources":["components/Todo.tsx","components/TodoInput.tsx","components/TodoList.tsx","App.tsx","index.tsx"],"names":["Todos","todos","completeTodo","removeTodo","updateTodo","useState","currentTodoId","setCurrentTodoId","TodoEdit","todo","text","newText","setNewText","onSubmit","e","preventDefault","undefined","className","type","value","onChange","target","autoFocus","TodoNotEdit","isComplete","onClick","id","map","index","TodoInput","props","edit","input","setInput","inputRef","useRef","useEffect","current","focus","Math","floor","random","placeholder","name","ref","LOCAL_STORAGE_KEY","TodoList","setTodos","storageTodos","JSON","parse","localStorage","getItem","setItem","stringify","test","newTodos","console","log","Todo","updatedTodos","filter","newTodo","prev","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.323c090b.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport TodoInput from \"./TodoInput\";\nimport TodoList, { TodoItem } from \"./TodoList\";\nimport { BiTrash, BiEdit } from \"react-icons/bi\";\n\ntype Props = {\n  todos: TodoItem[];\n  completeTodo: (id: number) => void;\n  removeTodo: (id: number) => void;\n  updateTodo: (newTodo: TodoItem) => void;\n};\n\nconst Todos: React.FC<Props> = ({\n  todos,\n  completeTodo,\n  removeTodo,\n  updateTodo,\n}) => {\n  const [currentTodoId, setCurrentTodoId] = useState<number>();\n\n  function TodoEdit({ todo }: { todo: TodoItem }) {\n    const [newText, setNewText] = useState(todo.text);\n\n    function handleSubmit(e: any) {\n      e.preventDefault();\n      setCurrentTodoId(undefined);\n      updateTodo({\n        ...todo,\n        text: newText,\n      });\n    }\n\n    return (\n      <form onSubmit={handleSubmit} className=\"todoEdit\">\n        <input\n          type=\"text\"\n          // placeholder=\"Update task\"\n          value={newText}\n          // name=\"text\"\n          onChange={(e) => setNewText(e.target.value)}\n          className=\"todoText edit\"\n          autoFocus\n        />\n        <button className=\"todoButton edit\">Submit</button>\n      </form>\n    );\n  }\n\n  // rename lol\n  const TodoNotEdit: React.FC<{ todo: TodoItem }> = ({ todo }) => {\n    return (\n      <div className={todo.isComplete ? \"todoRow complete\" : \"todoRow\"}>\n        <div onClick={() => completeTodo(todo.id)} className=\"todoToggle\" />\n        <p className=\"todoContent\">{todo.text}</p>\n\n        <div className=\"icons\">\n          <BiEdit\n            onClick={() => setCurrentTodoId(todo.id)}\n            className=\"editIcon\"\n          />\n          <BiTrash onClick={() => removeTodo(todo.id)} className=\"deleteIcon\" />\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      {todos.map((todo, index) =>\n        todo.id === currentTodoId ? (\n          <TodoEdit key={todo.id} todo={todo} />\n        ) : (\n          <TodoNotEdit key={todo.id} todo={todo} />\n        )\n      )}\n    </div>\n  );\n};\n\nexport default Todos;\n","import React, { useState, useEffect, useRef } from \"react\";\n//rfce\n\nconst TodoInput: React.FC<any> = (props: any) => {\n  const [input, setInput] = useState(props.edit ? props.edit.value : \"\");\n\n  //auto focus on start up or after edit\n  const inputRef = useRef<any>();\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleChange = (e: any) => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input,\n    });\n\n    setInput(\"\");\n  };\n\n  return (\n    <form className=\"TodoInput\" onSubmit={handleSubmit}>\n      <div className=\"todoInputBox\">\n        <input\n          type=\"text\"\n          placeholder=\"Add a todo\"\n          value={input}\n          name=\"text\"\n          className=\"todoText\"\n          onChange={handleChange}\n          ref={inputRef}\n        />\n        <button className=\"todoButton\">Add todo</button>\n      </div>\n    </form>\n  );\n};\n\nexport default TodoInput;\n","import React, { useState, useEffect } from \"react\";\nimport Todo from \"./Todo\";\nimport TodoInput from \"./TodoInput\";\n\nconst LOCAL_STORAGE_KEY: string = \"react-todo-list-todos\";\n\nexport type TodoItem = {\n  id: number;\n  text: string;\n  isComplete: boolean;\n};\n\nfunction TodoList() {\n  const [todos, setTodos] = useState<TodoItem[]>([]);\n\n  useEffect(() => {\n    // fires when app component mounts to the DOM\n    const storageTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY)!);\n    if (storageTodos) setTodos(storageTodos);\n  }, []);\n\n  useEffect(() => {\n    // fires when todos array gets updated\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  }, [todos]);\n\n  const addTodo = (todo: TodoItem) => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      // handles unexpected inputs\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n\n    setTodos(newTodos);\n    console.log(todo, ...todos);\n  };\n\n  const updateTodo = (newTodo: TodoItem) => {\n    if (!newTodo.text || /^\\s*$/.test(newTodo.text)) {\n      // handles unexpected inputs\n      return;\n    }\n    console.log(newTodo);\n    console.log(todos);\n\n    setTodos((prev) =>\n      prev.map((todo) => (todo.id === newTodo.id ? newTodo : todo))\n    );\n  };\n\n  const removeTodo = (id: number) =>\n    setTodos(todos.filter((todo) => todo.id !== id));\n\n  const completeTodo = (id: number) => {\n    let updatedTodos = todos.map((todo) => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  return (\n    <div>\n      <h1>My Tasks</h1>\n      <TodoInput onSubmit={addTodo} />\n      <Todo\n        todos={todos}\n        completeTodo={completeTodo}\n        removeTodo={removeTodo}\n        updateTodo={updateTodo}\n      />\n    </div>\n  );\n}\n\nexport default TodoList;\n","import React from \"react\";\n\nimport \"./App.css\";\nimport TodoInput from \"./components/TodoInput\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n  return (\n    <div className=\"todoApp\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}