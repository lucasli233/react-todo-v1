{"version":3,"sources":["../node_modules/typescript/lib sync","components/TodoForm.js","components/Todo.js","components/TodoList.js","App.tsx","index.tsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","TodoForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","target","className","onSubmit","preventDefault","Math","floor","random","text","type","placeholder","name","onChange","ref","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","TodoEdit","todo","TodoNotEdit","isComplete","onClick","map","index","LOCAL_STORAGE_KEY","TodoList","setTodos","storageTodos","JSON","parse","localStorage","getItem","setItem","stringify","test","newTodos","console","log","updatedTodos","removeArr","filter","todoID","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0b2f9a8.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 8;","import React, { useState, useEffect, useRef } from \"react\";\nimport { formatDiagnostic } from \"typescript\";\n//rfce\n\nfunction TodoForm(props) {\n  const [input, setInput] = useState(props.edit ? props.edit.value : \"\");\n\n  //auto focus on start up or after edit\n  const inputRef = useRef(null);\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input,\n    });\n\n    setInput(\"\");\n  };\n\n  return (\n    <form className=\"todoForm\" onSubmit={handleSubmit}>\n      {props.edit ? (\n        <div className=\"todoFormBox\">\n          <input\n            type=\"text\"\n            placeholder=\"Update task\"\n            value={input}\n            name=\"text\"\n            className=\"todoInput edit\"\n            onChange={handleChange}\n            ref={inputRef}\n          />\n          <button className=\"todoButton edit\">Update</button>\n        </div>\n      ) : (\n        <div className=\"todoFormEdit\">\n          <input\n            type=\"text\"\n            placeholder=\"Add a todo\"\n            value={input}\n            name=\"text\"\n            className=\"todoInput\"\n            onChange={handleChange}\n            ref={inputRef}\n          />\n          <button className=\"todoButton\">Add todo</button>\n        </div>\n      )}\n    </form>\n  );\n}\n\nexport default TodoForm;\n","import React, { useEffect, useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport TodoList from \"./TodoList\";\nimport { BiTrash, BiEdit } from \"react-icons/bi\";\n\nfunction Todo({ todos, completeTodo, removeTodo, updateTodo }) {\n  const [edit, setEdit] = useState({\n    id: null,\n    value: \"\",\n  });\n\n  const submitUpdate = (value) => {\n    updateTodo(edit.id, value);\n    setEdit({ id: null, value: \"\" });\n  };\n\n  function TodoEdit({ todo }) {\n    return <TodoForm />;\n  }\n\n  // rename lol\n  function TodoNotEdit({ todo }) {\n    return (\n      <div\n        className={todo.isComplete ? \"todoRow complete\" : \"todoRow\"}\n        key={todo.id}\n      >\n        <div onClick={() => completeTodo(todo.id)}>{todo.text}</div>\n        <div className=\"icons\">\n          <BiEdit\n            onClick={() => setEdit({ id: todo.id, value: todo.text })}\n            className=\"editIcon\"\n          />\n          <BiTrash onClick={() => removeTodo(todo.id)} className=\"deleteIcon\" />\n        </div>\n      </div>\n    );\n  }\n\n  return todos.map((todo, index) =>\n    todo.id == edit.id ? <TodoEdit todo={todo} /> : <TodoNotEdit todo={todo} />\n  );\n}\n\nexport default Todo;\n","import React, { useState, useEffect } from \"react\";\nimport Todo from \"./Todo\";\nimport TodoForm from \"./TodoForm\";\n\nconst LOCAL_STORAGE_KEY = \"react-todo-list-todos\";\n\nfunction TodoList() {\n  const [todos, setTodos] = useState([]);\n\n  useEffect(() => {\n    // fires when app component mounts to the DOM\n    const storageTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    if (storageTodos) {\n      setTodos(storageTodos);\n    }\n  }, []);\n\n  useEffect(() => {\n    // fires when todos array gets updated\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  }, [todos]);\n\n  const addTodo = (todo) => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      // handles unexpected inputs\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n\n    setTodos(newTodos);\n    console.log(todo, ...todos);\n  };\n\n  const updateTodo = (todoID, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      // handles unexpected inputs\n      return;\n    }\n    setTodos((prev) =>\n      prev.map((item) => (item.id === todoID ? newValue : item))\n    );\n  };\n\n  const removeTodo = (id) => {\n    const removeArr = todos.filter((todo) => todo.id !== id);\n    setTodos(removeArr);\n  };\n\n  const completeTodo = (id) => {\n    let updatedTodos = todos.map((todo) => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  return (\n    <div>\n      <h1>My Tasks</h1>\n      <TodoForm onSubmit={addTodo} />\n      <Todo\n        todos={todos}\n        completeTodo={completeTodo}\n        removeTodo={removeTodo}\n        updateTodo={updateTodo}\n      />\n    </div>\n  );\n}\n\nexport default TodoList;\n","import React from \"react\";\n\nimport \"./App.css\";\nimport TodoForm from \"./components/TodoForm\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n  return (\n    <div className=\"todoApp\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}