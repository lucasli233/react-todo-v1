{"version":3,"sources":["../node_modules/typescript/lib sync","components/TodoForm.js","components/Todo.js","components/TodoList.js","App.tsx","index.tsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","TodoForm","props","useState","input","setInput","className","onSubmit","preventDefault","Math","floor","random","text","type","placeholder","value","name","onChange","target","Todo","todos","completeTodo","map","todo","index","isComplete","onClick","TodoList","setTodos","test","newTodos","updatedTodos","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0GAAA,SAASA,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BO,EAAOC,QAAUR,EACjBA,EAAoBS,GAAK,G,0PCwBVC,MA7Bf,SAAkBC,GAAQ,IAAD,EACKC,mBAAS,IADd,mBACdC,EADc,KACPC,EADO,KAcvB,OACE,uBAAMC,UAAU,YAAYC,SAVT,SAACd,GACpBA,EAAEe,iBACFN,EAAMK,SAAS,CACbP,GAAIS,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,KAAMR,IAERC,EAAS,KAIT,UACE,uBACEQ,KAAK,OACLC,YAAY,aACZC,MAAOX,EACPY,KAAK,OACLV,UAAU,aACVW,SApBe,SAACxB,GACpBY,EAASZ,EAAEyB,OAAOH,UAqBhB,wBAAQT,UAAU,cAAlB,0B,gBCASa,MArBf,YAAwC,IAAxBC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,aAAgB,EACblB,mBAAS,CAC/BH,GAAI,KACJe,MAAO,KAH4B,mBAKrC,OALqC,UAK9BK,EAAME,KAAI,SAACC,EAAMC,GAAP,OACf,sBACElB,UAAWiB,EAAKE,WAAa,oBAAsB,WADrD,UAIE,qBAAmBC,QAAS,kBAAML,EAAaE,EAAKvB,KAApD,SACGuB,EAAKX,MADEW,EAAKvB,IAGf,sBAAKM,UAAU,QAAf,UACE,cAAC,IAAD,IACA,cAAC,IAAD,SAPGkB,OCmBIG,MA7Bf,WAAqB,IAAD,EACQxB,mBAAS,IADjB,mBACXiB,EADW,KACJQ,EADI,KAoBlB,OACE,gCACE,2DACA,cAAC,EAAD,CAAUrB,SArBE,SAACgB,GACf,GAAKA,EAAKX,OAAQ,QAAQiB,KAAKN,EAAKX,MAApC,CAGA,IAAMkB,EAAQ,CAAIP,GAAJ,mBAAaH,IAC3BQ,EAASE,OAiBP,cAAC,EAAD,CAAMV,MAAOA,EAAOC,aAdH,SAACrB,GACpB,IAAI+B,EAAeX,EAAME,KAAI,SAACC,GAI5B,OAHIA,EAAKvB,KAAOA,IACduB,EAAKE,YAAcF,EAAKE,YAEnBF,KAETK,EAASG,UCPEC,MARf,WACE,OACE,qBAAK1B,UAAU,WAAf,SACE,cAAC,EAAD,OCLN2B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0b4c7abc.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 7;","import React, { useState } from \"react\";\nimport { formatDiagnostic } from \"typescript\";\n//rfce\nfunction TodoForm(props) {\n  const   [input, setInput] = useState(\"\");\n  const handleChange = (e) => {\n    setInput(e.target.value);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input,\n    });\n    setInput(\"\");\n  };\n\n  return (\n    <form className=\"todo-form\" onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"Add a todo\"\n        value={input}\n        name=\"text\"\n        className=\"todo-input\"\n        onChange={handleChange}\n      />\n      <button className=\"todo-button\">Add todo</button>\n    </form>\n  );\n}\n\nexport default TodoForm;\n","import React, { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport TodoList from \"./TodoList\";\nimport { RiCloseCircleLine } from \"react-icons/ri\";\nimport { TiEdit } from \"react-icons/ti\";\n\nfunction Todo({ todos, completeTodo }) {\n  const [edit, setEdit] = useState({\n    id: null,\n    value: \"\",\n  });\n  return todos.map((todo, index) => (\n    <div\n      className={todo.isComplete ? \"todo-row complete\" : \"todo-row\"}\n      key={index}\n    >\n      <div key={todo.id} onClick={() => completeTodo(todo.id)}>\n        {todo.text}\n      </div>\n      <div className=\"icons\">\n        <RiCloseCircleLine />\n        <TiEdit />\n      </div>\n    </div>\n  ));\n}\n\nexport default Todo;\n","import React, { useState } from \"react\";\nimport Todo from \"./Todo\";\nimport TodoForm from \"./TodoForm\";\n\nfunction TodoList() {\n  const [todos, setTodos] = useState([]);\n  const addTodo = (todo) => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n  };\n\n  const completeTodo = (id) => {\n    let updatedTodos = todos.map((todo) => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  return (\n    <div>\n      <h1>What's the plan for today</h1>\n      <TodoForm onSubmit={addTodo} />\n      <Todo todos={todos} completeTodo={completeTodo} />\n    </div>\n  );\n}\n\nexport default TodoList;\n","import React from \"react\";\n\nimport \"./App.css\";\nimport TodoForm from \"./components/TodoForm\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}