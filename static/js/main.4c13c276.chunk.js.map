{"version":3,"sources":["../node_modules/typescript/lib sync","components/TodoForm.js","components/Todo.js","components/TodoList.js","App.tsx","index.tsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","TodoForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","target","className","onSubmit","preventDefault","Math","floor","random","text","type","placeholder","name","onChange","ref","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","onClick","LOCAL_STORAGE_KEY","TodoList","setTodos","storageTodos","JSON","parse","localStorage","getItem","setItem","stringify","test","newTodos","console","log","updatedTodos","removeArr","filter","todoID","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c13c276.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 8;","import React, { useState, useEffect, useRef } from \"react\";\nimport { formatDiagnostic } from \"typescript\";\n//rfce\n\nfunction TodoForm(props) {\n  const [input, setInput] = useState(props.edit ? props.edit.value : \"\");\n\n  //auto focus on start up or after edit\n  const inputRef = useRef(null);\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input,\n    });\n\n    setInput(\"\");\n  };\n\n  return (\n    <form className=\"todo-form\" onSubmit={handleSubmit}>\n      {props.edit ? (\n        <>\n          <input\n            type=\"text\"\n            placeholder=\"Update task\"\n            value={input}\n            name=\"text\"\n            className=\"todo-input edit\"\n            onChange={handleChange}\n            ref={inputRef}\n          />\n          <button className=\"todo-button edit\">Update</button>\n        </>\n      ) : (\n        <>\n          <input\n            type=\"text\"\n            placeholder=\"Add a todo\"\n            value={input}\n            name=\"text\"\n            className=\"todo-input\"\n            onChange={handleChange}\n            ref={inputRef}\n          />\n          <button className=\"todo-button\">Add todo</button>\n        </>\n      )}\n    </form>\n  );\n}\n\nexport default TodoForm;\n","import React, { useEffect, useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport TodoList from \"./TodoList\";\nimport { RiCloseCircleLine } from \"react-icons/ri\";\nimport { TiEdit } from \"react-icons/ti\";\n\nfunction Todo({ todos, completeTodo, removeTodo, updateTodo }) {\n  const [edit, setEdit] = useState({\n    id: null,\n    value: \"\",\n  });\n\n  const submitUpdate = (value) => {\n    updateTodo(edit.id, value);\n    setEdit({ id: null, value: \"\" });\n  };\n\n  if (edit.id) {\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />;\n  }\n\n  return todos.map((todo, index) => (\n    <div\n      className={todo.isComplete ? \"todo-row complete\" : \"todo-row\"}\n      key={index}\n    >\n      <div key={todo.id} onClick={() => completeTodo(todo.id)}>\n        {todo.text}\n      </div>\n      <div className=\"icons\">\n        <RiCloseCircleLine\n          onClick={() => removeTodo(todo.id)}\n          className=\"delete-icon\"\n        />\n        <TiEdit\n          onClick={() => setEdit({ id: todo.id, value: todo.text })}\n          className=\"edit-icon\"\n        />\n      </div>\n    </div>\n  ));\n}\n\nexport default Todo;\n","import React, { useState, useEffect } from \"react\";\nimport Todo from \"./Todo\";\nimport TodoForm from \"./TodoForm\";\n\nconst LOCAL_STORAGE_KEY = \"react-todo-list-todos\";\n\nfunction TodoList() {\n  const [todos, setTodos] = useState([]);\n\n  useEffect(() => {\n    // fires when app component mounts to the DOM\n    const storageTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    if (storageTodos) {\n      setTodos(storageTodos);\n    }\n  }, []);\n\n  useEffect(() => {\n    // fires when todos array gets updated\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  }, [todos]);\n\n  const addTodo = (todo) => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      // handles unexpected inputs\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n\n    setTodos(newTodos);\n    console.log(todo, ...todos);\n  };\n\n  const updateTodo = (todoID, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      // handles unexpected inputs\n      return;\n    }\n    setTodos((prev) =>\n      prev.map((item) => (item.id === todoID ? newValue : item))\n    );\n  };\n\n  const removeTodo = (id) => {\n    const removeArr = [...todos].filter((todo) => todo.id !== id);\n    setTodos(removeArr);\n  };\n\n  const completeTodo = (id) => {\n    let updatedTodos = todos.map((todo) => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  return (\n    <div>\n      <h1> My Tasks</h1>\n      <TodoForm onSubmit={addTodo} />\n      <Todo\n        todos={todos}\n        completeTodo={completeTodo}\n        removeTodo={removeTodo}\n        updateTodo={updateTodo}\n      />\n    </div>\n  );\n}\n\nexport default TodoList;\n","import React from \"react\";\n\nimport \"./App.css\";\nimport TodoForm from \"./components/TodoForm\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}